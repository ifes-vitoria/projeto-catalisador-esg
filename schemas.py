from sqlalchemy import Column, Integer, String, Float, Date, ForeignKey
from sqlalchemy.orm import relationship
from database import Base

class Empresa(Base):
    __tablename__ = "empresas"

    id = Column(Integer, primary_key=True, index=True)
    nome = Column(String, index=True)
    atividade = Column(String, index=True)
    estado = Column(String, index=True)
    cidade = Column(String, index=True)
    producaomes = Column(String, index=True)
    unidproducao = Column(String, index=True)
    data = Column(Date)

    surveys = relationship("Survey", back_populates="empresa")

class Survey(Base):
    __tablename__ = "surveys"

    id = Column(Integer, primary_key=True, index=True)
    empresa_id = Column(Integer, ForeignKey("empresas.id"))
    ambiental_id = Column(Integer, ForeignKey("survey_ambiental.id"))
    governanca_id = Column(Integer, ForeignKey("survey_governanca.id"))
    social_id = Column(Integer, ForeignKey("survey_social.id"))

    empresa = relationship("Empresa", back_populates="surveys")
    ambiental = relationship("SurveyAmbiental", back_populates="survey")
    governanca = relationship("SurveyGovernanca", back_populates="survey")
    social = relationship("SurveySocial", back_populates="survey")

class SurveyAmbiental(Base):
    __tablename__ = "survey_ambiental"

    id = Column(Integer, primary_key=True, index=True)
    from sqlalchemy import Column, String

    ambiental_emissoesGEE = Column(String)
    ambiental_inventarioGEE = Column(String)
    ambiental_planoMitigacao = Column(String)
    ambiental_participacaoPlataformas = Column(String)
    ambiental_divulgarInventario = Column(String)
    ambiental_grupoTrabalho = Column(String)
    ambiental_identificacaoCenarios = Column(String)
    ambiental_planoAdaptacao = Column(String)
    ambiental_engajamentoStakeholders = Column(String)
    ambiental_comunicacaoPlano = Column(String)
    ambiental_diagnosticoMetas = Column(String)
    ambiental_energiaRenovavel = Column(String)
    ambiental_eficienciaEnergetica = Column(String)
    ambiental_trocaLampadas = Column(String)
    ambiental_iso50001 = Column(String)
    ambiental_usoAguaSuperficial = Column(String)
    ambiental_monitoraAgua = Column(String)
    ambiental_indicadoresMetas = Column(String)
    ambiental_projetosReuso = Column(String)
    ambiental_acoesExternas = Column(String)
    ambiental_gestaoEfluentes = Column(String)
    ambiental_controlesTradicionais = Column(String)
    ambiental_praticasSustentaveis = Column(String)
    ambiental_planoefluente = Column(String)
    ambiental_gestaoEfluentesInovacoes = Column(String)
    ambiental_biodiversidadeLegais = Column(String)
    ambiental_praticasDispersas = Column(String)
    ambiental_biodiversidadeIntegradas = Column(String)
    ambiental_biodiversidadeEstrategia = Column(String)
    ambiental_biodiversidadePrioridade = Column(String)
    ambiental_usoSoloLegais = Column(String)
    ambiental_iniciativasSolo = Column(String)
    ambiental_usoSoloPraticas = Column(String)
    ambiental_usoSoloEstrategico = Column(String)
    ambiental_engajamentoSolo = Column(String)
    ambiental_economiaCircularIniciais = Column(String)
    ambiental_abordagemCicloVida = Column(String)
    ambiental_materiaisreciclados = Column(String)
    ambiental_abordagemCircularidade = Column(String)
    ambiental_parceriasEstrategicas = Column(String)
    ambiental_classificacaoResiduos = Column(String)
    ambiental_segregacaoResiduos = Column(String)
    ambiental_gestaoResiduosImplementado = Column(String)
    ambiental_logisticaReversa = Column(String)
    ambiental_avaliacaoTerceiros = Column(String)
    ambiental_SGAnaoImplementado = Column(String)
    ambiental_SGAIdentificacao = Column(String)
    ambiental_controlesOperacionais = Column(String)
    ambiental_conscientizacaoGestao = Column(String)
    ambiental_liderancaAmbiental = Column(String)
    ambiental_poluicaoSonoraLegais = Column(String)
    ambiental_monitoramentoSonoro = Column(String)
    ambiental_substituicaoRiscosSonoros = Column(String)
    ambiental_engajamentoSonoro = Column(String)
    ambiental_lideranca_sonora = Column(String)
    ambiental_gestao_ar = Column(String)
    ambiental_gestao_ar_monitoramento = Column(String)
    ambiental_gestao_ar_substituicao = Column(String)
    ambiental_gestao_ar_partes_interessadas = Column(String)
    ambiental_lideranca_qualidade_ar = Column(String)
    ambiental_gerenciamento_areas_contaminadas = Column(String)
    ambiental_gerenciamento_areas_contaminadas_monitoramento = Column(String)
    ambiental_gerenciamento_areas_contaminadas_substituicao = Column(String)
    ambiental_gerenciamento_areas_contaminadas_partes_interessadas = Column(String)
    ambiental_lideranca_areas_contaminadas = Column(String)
    ambiental_gerenciamento_produtos_perigosos = Column(String)
    ambiental_gerenciamento_produtos_perigosos_avancado = Column(String)
    ambiental_gerenciamento_produtos_perigosos_substituicao = Column(String)
    ambiental_gerenciamento_produtos_perigosos_partes_interessadas = Column(String)
    ambiental_lideranca_produtos_perigosos = Column(String)   
    ambiental_uso_agua_dia = Column(Float)
    ambiental_consumo_energia_mes = Column(Float)
    ambiental_emissoes_gee_mes = Column(Float)
    ambiental_reciclagem_residuos_mes = Column(Float)

    survey = relationship("Survey", back_populates="ambiental")

class SurveyGovernanca(Base):
    __tablename__ = "survey_governanca"

    id = Column(Integer, primary_key=True, index=True)
    from sqlalchemy import Column, String

    documentos_essenciais = Column(String)
    estatuto_diretrizes = Column(String)
    praticas_recomendadas = Column(String)
    politicas_selecao_remuneracao = Column(String)
    diretrizes_governanca_compliance = Column(String)
    comite_esg = Column(String)
    planejamento_acoes_esg = Column(String)
    objetivos_metas_esg = Column(String)
    adesao_pacto_global = Column(String)
    adocao_ods = Column(String)
    codigo_conduta = Column(String)
    comite_compliance = Column(String)
    monitoramento_compliance = Column(String)
    sistema_denuncias = Column(String)
    due_diligence = Column(String)
    combate_concorrencia_desleal = Column(String)
    mapeamento_concorrentes = Column(String)
    mapeamento_concorrentes_politica = Column(String)
    mapeamento_concorrentes_analise = Column(String)
    mapeamento_concorrentes_classificacao = Column(String)
    identificacao_partes_interessadas_nao_estruturada = Column(String)
    identificacao_partes_interessadas_cuidadosa = Column(String)
    partes_interessadas_detalhada = Column(String)
    partes_interessadas_continua = Column(String)
    partes_interessadas_sustentabilidade = Column(String)
    gestao_riscos_basica = Column(String)
    identificacao_riscos_fundamental = Column(String)
    analise_riscos_priorizacao = Column(String)
    planos_acao_riscos = Column(String)
    transparencia_riscos = Column(String)
    controles_internos_basicos = Column(String)
    controles_internos_sistematicos = Column(String)
    controles_internos_robusto = Column(String)
    controles_internos_preventivas = Column(String)
    controles_internos_preventivas_contas = Column(String)
    auditorias_basicas_ESG = Column(String)
    auditoria_requisitos_ESG = Column(String)
    auditorias_atuacao_direcao_ESG = Column(String)
    auditorias_plano_acao_ESG = Column(String)
    auditorias_transparencia_ESG = Column(String)
    avaliacao_conformidade = Column(String)
    planos_acao_estrategicos = Column(String)
    monitoramento_multas = Column(String)
    programas_compliance = Column(String)
    tendencias = Column(String)
    procedimentos_basicos = Column(String)
    acoes_isoladas = Column(String)
    acoes_integradas = Column(String)
    politica_estruturada = Column(String)
    politica_externa = Column(String)
    privacidade_basica = Column(String)
    acoes_privacidade_isoladas = Column(String)
    acoes_privacidade_integradas = Column(String)
    politica_privacidade = Column(String)
    politica_privacidade_externa = Column(String)
    responsabilizacao_basica = Column(String)
    prestacao_contas_transparente = Column(String)
    prestacao_contas_detalhada = Column(String)
    prestacao_contas_planejamento = Column(String)
    prestacao_contas_completa = Column(String)
    informacoes_esg_isoladas = Column(String)
    relatorio_esg_basico = Column(String)
    relatorio_esg_adequado = Column(String)
    relatorio_esg_detalhado = Column(String)
    relatorio_esg_verificacoes = Column(String)
    conselho_indep = Column(Float)
    conselho_mulher = Column(Float)
    conselho_negra = Column(Float)

    survey = relationship("Survey", back_populates="governanca")

class SurveySocial(Base):
    __tablename__ = "survey_social"

    from sqlalchemy import Column, String

    mapeamento_sociedade_civil = Column(String)
    incentivo_doacoes = Column(String)
    disponibilizacao_recursos = Column(String)
    disponibilizacao_bolsas = Column(String)
    indicadores_isp = Column(String)
    plano_comunicacao = Column(String)
    pesquisas_stakeholders = Column(String)
    indicadores_metas = Column(String)
    engajamento_social = Column(String)
    fomento_comunicacao = Column(String)
    participacao_comunidade = Column(String)
    identificacao_formadores = Column(String)
    plano_estrategico = Column(String)
    capacitacao_comunidade = Column(String)
    prioridade_fornecedores = Column(String)
    iniciativas_dh = Column(String)
    abordagem_reativa_dh = Column(String)
    abordagem_proativa_dh = Column(String)
    abordagem_proativa_dh_metas = Column(String)
    abordagem_proativa_dh_integracao = Column(String)
    legislacao_trabalhista_combate_trabalho_forcado = Column(String)
    legislacao_trabalhista_oit = Column(String)
    legislacao_trabalhista_oit_avaliacao = Column(String)
    legislacao_trabalhista_oit_monitoramento = Column(String)
    legislacao_trabalhista_oit_monitoramento_treinamento = Column(String)
    trabalho_infantil = Column(String)
    mapeamento_trabalho_infantil = Column(String)
    sistema_gestao_trabalho_infantil = Column(String)
    clausulas_trabalho_infantil = Column(String)
    campanhas_publicas_trabalho_infantil = Column(String)
    diversidade_equidade = Column(String)
    diversidade_equidade_formal = Column(String)
    politicas_diversidade_equidade = Column(String)
    politicas_diversidade_equidade_estrategias = Column(String)
    comunicacao_diversidade_equidade = Column(String)
    inclusao = Column(String)
    lideranca_inclusao = Column(String)
    politica_inclusao = Column(String)
    programa_diversidade = Column(String)
    programa_afirmativas = Column(String)
    desenvolvimento_profissional = Column(String)
    desenvolvimento_profissional_acoes = Column(String)
    politica_desenvolvimento_profissional = Column(String)
    programa_desenvolvimento_profissional = Column(String)
    politica_desenvolvimento_comunidade = Column(String)
    requisitos_legais = Column(String)
    analise_riscos_sso = Column(String)
    conscientizacao_forca_trabalho = Column(String)
    participacao_sso = Column(String)
    protagonismo_sso = Column(String)
    iniciativas_qualidade_vida = Column(String)
    acoes_pontuais_qualidade_vida = Column(String)
    participacao_trabalhadores = Column(String)
    programa_acompanhamento = Column(String)
    formacao_lideres = Column(String)
    legislacao_liberdade_associacao = Column(String)
    apoio_organizacoes_representativas = Column(String)
    dialogo_entidades_representativas = Column(String)
    abordagem_proativa = Column(String)
    resultados_interacoes = Column(String)
    iniciativas_basicas_politica = Column(String)
    nova_politica_remuneracao = Column(String)
    politica_remuneracao_implementada = Column(String)
    praticas_remuneracao_equitativas = Column(String)
    politica_remuneracao_estrategico = Column(String)
    requisitos_legais_direitos_consumidor = Column(String)
    postura_transparente = Column(String)
    canais_comunicacao_abertos = Column(String)
    desenvolvimento_produtos_sustentaveis = Column(String)
    protagonismo_relacoes_clientes = Column(String)
    politica_relacionamento_fornecedores = Column(String)
    comunicacao_ativa_fornecedores = Column(String)
    processo_qualificacao_fornecedores = Column(String)
    politica_monitoramento_fornecedores = Column(String)
    incentivo_fornecedores_protagonismo = Column(String)
    h_treinamento_func_ano = Column(Float)
    taxa_rotativ = Column(Float)
    diver_genero_anual = Column(Float)
    acid_trab_anual_horacolab = Column(Float)
    afast_trab_anual_horacolab = Column(Float)
    capac_fornecedor_socioamb_porcent = Column(Float)
    invest_desenv_comunid_reais = Column(Float)

    survey = relationship("Survey", back_populates="social")
